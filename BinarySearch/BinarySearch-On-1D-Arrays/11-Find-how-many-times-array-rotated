// Given an ascending sorted rotated array arr of distinct integers of size n. The array is right-rotated k times. Find the value of k.
class Solution {
    int findKRotation(int arr[], int n) {
        // code here
        int start = 0, end = n-1;
        if(arr[start]<arr[end])
        return 0;
        while(start<=end){
            int mid = start+(end-start)/2; 
            if(mid>0 && arr[mid-1]>arr[mid])
            return mid;
            else if((mid < n-1) &&arr[mid]>arr[mid+1])
            return mid+1;
            
            if(arr[mid]>arr[end]){
                start = mid+1;
            }
            else{
                end = mid-1;
            }
        }
        return -1;
    }
}
